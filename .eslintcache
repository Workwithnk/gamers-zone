[{"/home/nkpatel/gamer's Zone/gamer/src/index.js":"1","/home/nkpatel/gamer's Zone/gamer/src/App.js":"2","/home/nkpatel/gamer's Zone/gamer/src/reportWebVitals.js":"3","/home/nkpatel/gamer's Zone/gamer/src/Footer.js":"4","/home/nkpatel/gamer's Zone/gamer/src/firebase.js":"5","/home/nkpatel/gamer's Zone/gamer/src/ImageUpload.js":"6","/home/nkpatel/gamer's Zone/gamer/src/Post.js":"7","/home/nkpatel/gamer's Zone/gamer/src/LikeButton.js":"8"},{"size":500,"mtime":1622195159956,"results":"9","hashOfConfig":"10"},{"size":6363,"mtime":1623032046113,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1622195159956,"results":"12","hashOfConfig":"10"},{"size":488,"mtime":1622344007322,"results":"13","hashOfConfig":"10"},{"size":532,"mtime":1622205993698,"results":"14","hashOfConfig":"10"},{"size":2032,"mtime":1622430691948,"results":"15","hashOfConfig":"10"},{"size":3003,"mtime":1623079531810,"results":"16","hashOfConfig":"10"},{"size":869,"mtime":1623130189145,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"hp28eo",{"filePath":"20","messages":"21","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"22"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/nkpatel/gamer's Zone/gamer/src/index.js",[],"/home/nkpatel/gamer's Zone/gamer/src/App.js",["36"],"import { Button, makeStyles, Modal } from \"@material-ui/core\";\nimport { Input } from \"@material-ui/core\";\nimport React, { useEffect, useState } from \"react\";\nimport ExpandLessIcon from \"@material-ui/icons/ExpandLess\";\n\nimport \"./App.css\";\nimport { auth, db } from \"./firebase\";\nimport Footer from \"./Footer\";\nimport ImageUpload from \"./ImageUpload\";\nimport Post from \"./Post\";\n\nfunction getModalStyle() {\n  const top = 50;\n  const left = 50;\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: \"absolute\",\n    width: 200,\n    backgroundColor: theme.palette.background.paper,\n    border: \"2px solid #000\",\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\nfunction App() {\n  const [post, setPost] = useState([]);\n  const [username, setUserName] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [email, setEmail] = useState(\"\");\n  const [openModal, setOpenModal] = useState(false);\n  const [openSignIn, setOpenSignIn] = useState(false);\n  const classes = useStyles();\n  const [modalStyle] = useState(getModalStyle);\n  const [user, setUser] = useState(null);\n\n  useEffect(() => {\n    db.collection(\"posts\")\n      .orderBy(\"timestamp\", \"desc\")\n      .onSnapshot((snapshot) => {\n        setPost(\n          snapshot.docs.map((doc) => ({\n            id: doc.id,\n            post: doc.data(),\n          }))\n        );\n      });\n  }, []);\n\n  useEffect(() => {\n    const unsubscibe = auth.onAuthStateChanged((authUser) => {\n      if (authUser) {\n        setUser(authUser);\n      } else {\n        setUser(null);\n      }\n    });\n    return () => {\n      unsubscibe();\n    };\n  }, [user, username]);\n\n  const SignUp = (event) => {\n    event.preventDefault();\n    auth\n      .createUserWithEmailAndPassword(email, password)\n      .then((authUser) => {\n        return authUser.user.updateProfile({\n          displayName: username,\n        });\n      })\n      .catch((error) => {\n        alert(error.message);\n      });\n    setOpenModal(false);\n  };\n\n  const SignIn = (e) => {\n    e.preventDefault();\n    auth\n      .signInWithEmailAndPassword(email, password)\n      .catch((error) => alert(error.message));\n\n    setOpenSignIn(false);\n  };\n\n  return (\n    <div className=\"App\" id=\"App\">\n      <Modal open={openModal} onClose={() => setOpenModal(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app_signUp\">\n            <h2 style={{ textAlign: \"center\", color: \"#341f97\" }}>\n              Gamer's Zone\n            </h2>\n            <Input\n              placeholder=\"username\"\n              type=\"text\"\n              value={username}\n              onChange={(e) => setUserName(e.target.value)}\n            />\n            <Input\n              placeholder=\"email\"\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              value={password}\n              placeholder=\"password\"\n              type=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button variant=\"contained\" color=\"primary\" onClick={SignUp}>\n              SignUp\n            </Button>\n          </form>\n        </div>\n      </Modal>\n      <Modal open={openSignIn} onClose={() => setOpenSignIn(false)}>\n        <div style={modalStyle} className={classes.paper}>\n          <form className=\"app_signUp\">\n            <h2 style={{ textAlign: \"center\", color: \"#341f97\" }}>\n              Gamer's Zone\n            </h2>\n            <Input\n              placeholder=\"email\"\n              type=\"text\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n            />\n            <Input\n              value={password}\n              placeholder=\"password\"\n              type=\"password\"\n              onChange={(e) => setPassword(e.target.value)}\n            />\n            <Button variant=\"contained\" color=\"primary\" onClick={SignIn}>\n              SignIn\n            </Button>\n          </form>\n        </div>\n      </Modal>\n      <div className=\"app_header\">\n        <h1>Gamer's Zone</h1>\n        {user ? (\n          <Button\n            style={{\n              marginRight: \"5px\",\n              backgroundColor: \"#e74c3c\",\n              color: \"white\",\n              fontWeight: \"bold\",\n            }}\n            className=\"login_btn\"\n            variant=\"contained\"\n            onClick={() => auth.signOut()}\n          >\n            Logout\n          </Button>\n        ) : (\n          <div className=\"login_container\">\n            <Button\n              style={{\n                backgroundColor: \"#2ecc71\",\n                color: \"white\",\n                fontWeight: \"bold\",\n              }}\n              variant=\"contained\"\n              className=\"login_btn\"\n              onClick={() => setOpenSignIn(true)}\n            >\n              SignIn\n            </Button>\n            <Button\n              className=\"login_btn\"\n              style={{\n                margin: \"5px\",\n                backgroundColor: \"#2ecc71\",\n                color: \"white\",\n                fontWeight: \"bold\",\n              }}\n              variant=\"contained\"\n              onClick={() => setOpenModal(true)}\n            >\n              SignUp\n            </Button>\n          </div>\n        )}\n      </div>\n      <div className=\"main_container\">\n        <div className=\"image_upload\">\n          {user?.displayName ? (\n            <ImageUpload username={user.displayName} />\n          ) : (\n            <h3 className=\"altImage_Upload\">\n              do SignUp for accessing all features\n            </h3>\n          )}\n        </div>\n\n        <div className=\"app_post_container\">\n          {post.map(({ id, post }) => {\n            return (\n              <Post\n                key={id}\n                postId={id}\n                user={user}\n                username={post.username}\n                imageUrl={post.imageUrl}\n                caption={post.caption}\n              />\n            );\n          })}\n        </div>\n        <div className=\"backToTop\">\n          <a href=\"#\">\n            <ExpandLessIcon className=\"backToTopIcon\" />\n          </a>\n        </div>\n      </div>\n\n      <Footer />\n    </div>\n  );\n}\n\nexport default App;\n","/home/nkpatel/gamer's Zone/gamer/src/reportWebVitals.js",[],"/home/nkpatel/gamer's Zone/gamer/src/Footer.js",[],"/home/nkpatel/gamer's Zone/gamer/src/firebase.js",[],"/home/nkpatel/gamer's Zone/gamer/src/ImageUpload.js",[],"/home/nkpatel/gamer's Zone/gamer/src/Post.js",["37"],"import { Avatar, Button } from \"@material-ui/core\";\n// import ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\n// import firebase from \"firebase\";\nimport React, { useEffect, useState } from \"react\";\nimport { db } from \"./firebase\";\nimport LikeButton from \"./LikeButton\";\nimport \"./Post.css\";\n\nfunction Post({ postId, user, username, imageUrl, caption }) {\n  const [comments, setComments] = useState([]);\n  const [comment, setComment] = useState(\"\");\n  // const [userLike, setUserLike] = useState(0);\n  useEffect(() => {\n    let unsubscribe;\n    if (postId) {\n      unsubscribe = db\n        .collection(\"posts\")\n        .doc(postId)\n        .collection(\"comments\")\n        .orderBy(\"like\", \"desc\")\n        .onSnapshot((snapshot) => {\n          setComments(\n            snapshot.docs.map((doc) => ({\n              id: doc.id,\n              comment: doc.data(),\n              like: doc.data(),\n            }))\n          );\n        });\n    }\n    return () => {\n      unsubscribe();\n    };\n  }, [postId]);\n\n  const postComment = (e) => {\n    e.preventDefault();\n    db.collection(\"posts\").doc(postId).collection(\"comments\").add({\n      text: comment,\n      username: user.displayName,\n      like: 0,\n    });\n    setComment(\"\");\n  };\n\n  return (\n    <div className=\"post\">\n      <div className=\"post_header\">\n        <Avatar\n          className=\"post_avatar\"\n          alt={username}\n          src=\"/static/images/avatar/1.jpg\"\n        />\n        <h3>{username}</h3>\n      </div>\n\n      <img className=\"post_image\" src={imageUrl} alt=\"post Image\" />\n\n      <div className=\"post_text\">\n        <p>\n          <strong>{username} : </strong>\n          {caption}\n        </p>\n      </div>\n      {user && (\n        <div className=\"post_comment_container\">\n          <div className=\"post_comments_list\">\n            {comments.map(({ id, comment }) => {\n              return (\n                <div className=\"post_comment\" key={id}>\n                  <div>\n                    <p className=\"comment_text\">\n                      <strong>{comment.username} : </strong>\n                    </p>\n                    {comment.text}\n                  </div>\n                  <LikeButton\n                    postId={postId}\n                    commentId={id}\n                    commentLike={comment.like}\n                  />\n                </div>\n              );\n            })}\n          </div>\n\n          <form className=\"post_commentBox\">\n            <input\n              className=\"comment_input\"\n              type=\"text\"\n              placeholder=\"enter your suggetions.. \"\n              value={comment}\n              onChange={(e) => setComment(e.target.value)}\n            />\n            <Button\n              variant=\"contained\"\n              color=\"primary\"\n              className=\"comment_button\"\n              disabled={!comment}\n              onClick={postComment}\n            >\n              Add\n            </Button>\n          </form>\n        </div>\n      )}\n    </div>\n  );\n}\n\nexport default Post;\n","/home/nkpatel/gamer's Zone/gamer/src/LikeButton.js",[],{"ruleId":"38","severity":1,"message":"39","line":222,"column":11,"nodeType":"40","endLine":222,"endColumn":23},{"ruleId":"41","severity":1,"message":"42","line":57,"column":7,"nodeType":"40","endLine":57,"endColumn":69},"jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","jsx-a11y/img-redundant-alt","Redundant alt attribute. Screen-readers already announce `img` tags as an image. You don’t need to use the words `image`, `photo,` or `picture` (or any specified custom words) in the alt prop."]